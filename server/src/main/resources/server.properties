#
# Copyright 2017 Netflix, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
conductor.jetty.server.port=8080
#Dynomite Cluster details.
#format is host:port:rack separated by semicolon  
db=redis
workflow.dynomite.cluster.hosts=localhost:6379:us-east-1c
workflow.dynomite.connection.maxConnsPerHost=31
queues.dynomite.nonQuorum.port=6379

#namespace for the keys stored in Dynomite/Redis
workflow.namespace.prefix=conductor

#namespace prefix for the dyno queues
workflow.namespace.queue.prefix=conductor_queues

#no. of threads allocated to dyno-queues
queues.dynomite.threads=10

#non-quorum port used to connect to local redis.  Used by dyno-queues
queues.dynomite.nonQuorum.port=6379
workflow.elasticsearch.instanceType=external

workflow.elasticsearch.cluster.health.color=yellow
workflow.elasticsearch.url=http://localhost:9200
workflow.elasticsearch.index.batchSize=100
#Name of the elasticsearch cluster
workflow.elasticsearch.index.name=conductor
workflow.elasticsearch.tasklog.index.name=task_log

#Elasticsearch major release version.
workflow.elasticsearch.version=6

# SystemTaskWorkerCoordinator
workflow.system.task.worker.thread.count=500
workflow.system.task.worker.poll.count=500
workflow.system.task.worker.queue.size=500

# SimpleEventProcessor
workflow.event.processor.thread.count=5
workflow.dyno.queues.pollingInterval=10
workflow.dyno.queues.pollCount=20

# disable archival service
workflow.archive=false

#zookeeper
# workflow.zookeeper.lock.connection=host1.2181,host2:2181,host3:2181
# workflow.zookeeper.lock.sessionTimeoutMs
# workflow.zookeeper.lock.connectionTimeoutMs

#enable locking during workflow execution
workflow.decider.locking.enabled=true
workflow.decider.locking.namespace=conductor.alock
workflow.decider.locking.server=REDIS
workflow.decider.locking.leaseTimeInSeconds=120


#Redis cluster settings for locking module
workflow.redis.locking.server.type=single
#Comma seperated list of server nodes
workflow.redis.locking.server.address=redis://127.0.0.1:6379
workflow.redis.locking.server.password=


# extends modules
conductor.additional.modules=com.netflix.conductor.contribs.spectator.MetricsModule,com.netflix.conductor.contribs.DynoQueueStatusPublisherModule

# sweeper config
workflow.sweeper.thread.count=1
decider.sweep.frequency.seconds=60
workflow.system.task.worker.callback.seconds=60

# decide warn
workflow.task.pending.time.threshold.minutes=4320

#monitor
workflow.monitor.stats.freq.seconds=30

workflow.system.task.worker.poll.interval=50